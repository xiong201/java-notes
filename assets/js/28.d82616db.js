(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{358:function(t,r,o){"use strict";o.r(r);var e=o(7),v=Object(e.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[r("strong",[t._v("什么是并行流？")])]),t._v(" "),r("p",[t._v("并行流就是将一个流的内容分成多个数据块，并用不同的线程分别处理每个不同数据块的流。")]),t._v(" "),r("p",[r("strong",[t._v("如何使用并行流？")])]),t._v(" "),r("p",[t._v("使用 "),r("code",[t._v("parallelStream()")]),t._v(" 方法使用并行流或者通过 "),r("code",[t._v("stream.parallel()")]),t._v(" 将普通流转换成并行流。")]),t._v(" "),r("p",[r("strong",[t._v("并行流原理")]),t._v("：并行流内部使用了默认的 "),r("code",[t._v("ForkJoinPool")]),t._v(" 线程池。默认的线程数量就是处理器的核心数。"),r("code",[t._v("java.util.concurrent.ForkJoinPool.common.parallelism")]),t._v(" 可以改变线程池大小。不过该值是全局变量。改变他会影响所有并行流。目前还无法为每个流配置专属的线程数。")]),t._v(" "),r("p",[r("strong",[t._v("并行流使用注意事项")]),t._v("：")]),t._v(" "),r("ul",[r("li",[t._v("并行流并不一定时最快的处理方式。")]),t._v(" "),r("li",[t._v("并行流虽然轻易实现了多线程，但是并没有解决多线程中共享变量的修改问题。")])]),t._v(" "),r("h1",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://developer.aliyun.com/article/780116",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java8并行流：执行速度快的飞起！-阿里云开发者社区"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=v.exports}}]);