(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{393:function(e,t,a){"use strict";a.r(t);var s=a(7),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"mybatis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mybatis"}},[e._v("#")]),e._v(" Mybatis")]),e._v(" "),t("h2",{attrs:{id:"和-的区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别是什么"}},[e._v("#")]),e._v(" #{} 和 ${} 的区别是什么？")]),e._v(" "),t("ul",[t("li",[e._v("${}是 Properties 文件中的变量占位符，它可以用于标签属性值和 sql 内部，属于静态文本替换，比如${driver}会被静态替换为com.mysql.jdbc. Driver。")]),e._v(" "),t("li",[e._v("#{}是 sql 的参数占位符，MyBatis 会将 sql 中的#{}替换为? 号，在 sql 执行前会使用 PreparedStatement 的参数设置方法，按序给 sql 的? 号占位符设置参数值，比如 ps.setInt(0, parameterValue)，#{item.name} 的取值方式为使用反射从参数对象中获取 item 对象的 name 属性值，相当于 param.getItem().getName()。")])]),e._v(" "),t("h2",{attrs:{id:"xml-映射文件中-除了常见的-select、insert、update、delete-标签之外-还有哪些标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xml-映射文件中-除了常见的-select、insert、update、delete-标签之外-还有哪些标签"}},[e._v("#")]),e._v(" xml 映射文件中，除了常见的 select、insert、update、delete 标签之外，还有哪些标签？")]),e._v(" "),t("p",[e._v("还有很多其他的标签， "),t("resultMap",[e._v(" 、 "),t("parameterMap",[e._v(" 、 "),t("sql",[e._v(" 、 "),t("include",[e._v(" 、 "),t("selectKey",[e._v(" ，加上动态 sql 的 9 个标签， trim|where|set|foreach|if|choose|when|otherwise|bind 等，其中 "),t("sql",[e._v(" 为 sql 片段标签，通过 "),t("include",[e._v(" 标签引入 sql 片段， "),t("selectKey",[e._v(" 为不支持自增的主键生成策略标签。")])],1)],1)],1)],1)],1)],1)],1)],1),e._v(" "),t("h2",{attrs:{id:"dao-接口的工作原理是什么-dao-接口里的方法-参数不同时-方法能重载吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dao-接口的工作原理是什么-dao-接口里的方法-参数不同时-方法能重载吗"}},[e._v("#")]),e._v(" Dao 接口的工作原理是什么？Dao 接口里的方法，参数不同时，方法能重载吗？")]),e._v(" "),t("p",[e._v("通常一个 xml 映射文件，都会写一个 Dao 接口与之对应。Dao 接口就是人们常说的 Mapper 接口，接口的全限名，就是映射文件中的 namespace 的值，接口的方法名，就是映射文件中 MappedStatement 的 id 值，接口方法内的参数，就是传递给 sql 的参数。 Mapper 接口是没有实现类的，当调用接口方法时，接口全限名+方法名拼接字符串作为 key 值，可唯一定位一个 MappedStatement ，举例： com.mybatis3.mappers. StudentDao.findStudentById ，可以唯一找到 namespace 为 com.mybatis3.mappers. StudentDao 下面 id = findStudentById 的 MappedStatement 。在 MyBatis 中，每一个 "),t("select",[e._v(" 、 "),t("insert",[e._v(" 、 "),t("update",[e._v(" 、 "),t("delete",[e._v(" 标签，都会被解析为一个 MappedStatement 对象。\nDao 接口里的方法可以重载，但是 Mybatis 的 xml 里面的 ID 不允许重复。")])],1)],1)],1)]),e._v(" "),t("h1",{attrs:{id:"mybatisplus"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mybatisplus"}},[e._v("#")]),e._v(" MybatisPlus")])])}),[],!1,null,null,null);t.default=r.exports}}]);