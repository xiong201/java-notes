(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{348:function(a,s,t){"use strict";t.r(s);var e=t(7),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[s("strong",[a._v("使用"),s("code",[a._v("BigDecimal")]),a._v("进行浮点数的运算，避免精度丢失")]),a._v("。")]),a._v(" "),s("p",[a._v("通常情况下，大部分需要浮点数精确运算结果的业务场景（比如涉及到钱的场景）都是通过"),s("code",[a._v("BigDecimal")]),a._v("来做的。")]),a._v(" "),s("h1",{attrs:{id:"bigdecimal-常见方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bigdecimal-常见方法"}},[a._v("#")]),a._v(" BigDecimal 常见方法")]),a._v(" "),s("h2",{attrs:{id:"创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[a._v("#")]),a._v(" 创建")]),a._v(" "),s("p",[a._v("为了防止精度丢失，使用"),s("code",[a._v("BigDecimal(String)")]),a._v("构造方法或者"),s("code",[a._v("BigDecimal valueOf(double val)")]),a._v(" 静态方法来创建"),s("code",[a._v("BigDecimal")]),a._v(" 对象。")]),a._v(" "),s("blockquote",[s("p",[a._v("【强制】禁止使用构造方法 BigDecimal(double)的方式把 double 值转化为 BigDecimal 对象。 说明：BigDecimal(double)存在精度损失风险，在精确计算或值比较的场景中可能会导致业务逻辑异常。 如：BigDecimal g = new BigDecimal(0.1F); 实际的存储值为：0.10000000149")])]),a._v(" "),s("h2",{attrs:{id:"加减乘除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加减乘除"}},[a._v("#")]),a._v(" 加减乘除")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//两个BigDecimal对象相加")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" augend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//两个BigDecimal对象相减")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("subtract")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" subtrahend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//两个BigDecimal对象相乘")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("multiply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" multiplicand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//两个BigDecimal对象相除（使用3个参数版本，scale表示保留几位小数，roundingMode 代表保留规则）。roundingMode值为BigDecimal.ROUND_HALF_UP表示四舍五入")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("divide")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" divisor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" scale"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" roundingMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h2",{attrs:{id:"保留几位小数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保留几位小数"}},[a._v("#")]),a._v(" 保留几位小数")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setScale")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" newScale"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" roundingMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("ul",[s("li",[a._v("newScale：保留几位小数")]),a._v(" "),s("li",[a._v("roundingMode：保留规则。"),s("code",[a._v("BigDecimal.ROUND_HALF_UP")]),a._v("为四舍五入")])]),a._v(" "),s("h2",{attrs:{id:"大小比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大小比较"}},[a._v("#")]),a._v(" 大小比较")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("compareTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("使用"),s("code",[a._v("a.compareTo(b)")]),a._v("进行大小比较：")]),a._v(" "),s("ul",[s("li",[a._v("-1：a 小于 b")]),a._v(" "),s("li",[a._v("0：a 等于 b")]),a._v(" "),s("li",[a._v("1：a 大于 b")])]),a._v(" "),s("blockquote",[s("p",[a._v("【强制】BigDecimal 的等值比较应使用 compareTo()方法，而不是 equals()方法。 说明：equals()方法会比较值和精度（1.0 与 1.00 返回结果为 false），而 compareTo()则会忽略精度。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);