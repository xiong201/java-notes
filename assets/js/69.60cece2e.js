(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{399:function(n,i,v){"use strict";v.r(i);var _=v(7),t=Object(_.a)({},(function(){var n=this,i=n._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[i("h1",{attrs:{id:"什么是nginx"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#什么是nginx"}},[n._v("#")]),n._v(" 什么是Nginx")]),n._v(" "),i("p",[n._v("Nginx 同 Apache 一样都是 WEB 服务器，不过，Nginx 更加轻量级，它的内存占用少，启动极快，高并发能力强，在互联网项目中广泛应用。并且，Nginx 可以作为反向代理服务器使用，支持 IMAP/POP3/SMTP 服务。")]),n._v(" "),i("h1",{attrs:{id:"nginx-的特点有哪些"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#nginx-的特点有哪些"}},[n._v("#")]),n._v(" Nginx 的特点有哪些")]),n._v(" "),i("ol",[i("li",[i("strong",[n._v("内存占用非常少")]),n._v(" ：一般情况下，10000 个非活跃的 HTTP Keep-Alive 连接在 Nginx 中仅消耗 2.5MB 的内存，这是 Nginx 支持高并发连接的基础。")]),n._v(" "),i("li",[i("strong",[n._v("高并发")]),n._v(" : 单机支持 10 万以上的并发连接")]),n._v(" "),i("li",[i("strong",[n._v("跨平台")]),n._v(" :可以运行在 Linux，Windows，FreeBSD，Solaris，AIX，Mac OS 等操作系统上。")]),n._v(" "),i("li",[i("strong",[n._v("扩展性好")]),n._v(" ：第三方插件非常多！")]),n._v(" "),i("li",[i("strong",[n._v("安装使用简单")]),n._v(" ：对于简单的应用场景，我们很快就能够上手使用。")]),n._v(" "),i("li",[i("strong",[n._v("稳定性好")]),n._v(" ：bug 少，不会遇到各种奇葩的问题。")]),n._v(" "),i("li",[i("strong",[n._v("免费")]),n._v(" ：开源软件，免费使用。")])]),n._v(" "),i("h1",{attrs:{id:"nginx能用来做啥"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#nginx能用来做啥"}},[n._v("#")]),n._v(" Nginx能用来做啥")]),n._v(" "),i("ul",[i("li",[n._v("静态资源服务器")]),n._v(" "),i("li",[n._v("反向代理")]),n._v(" "),i("li",[n._v("正向代理")]),n._v(" "),i("li",[n._v("负载均衡")])]),n._v(" "),i("h1",{attrs:{id:"nginx-有哪些负载均衡策略"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#nginx-有哪些负载均衡策略"}},[n._v("#")]),n._v(" Nginx 有哪些负载均衡策略")]),n._v(" "),i("p",[n._v("Nginx常见的负载均衡策略有：")]),n._v(" "),i("ul",[i("li",[i("strong",[n._v("轮询（Round Robin，默认）")]),n._v("：如果没有配置权重的话，每个请求按时间顺序逐一分配到不同的服务器处理。如果配置权重的话，权重越高的服务器被访问的概率就越大。")]),n._v(" "),i("li",[i("strong",[n._v("IP 哈希")]),n._v("：根据发出请求的和客户端 ip 的 hash 值来分配服务器，可以保证同 IP 发出的请求映射到同一服务器，或者具有相同 hash 值的不同 IP 映射到同一服务器。该算法在一定程度上解决了集群部署环境下 Session 不共享的问题。")]),n._v(" "),i("li",[i("strong",[n._v("最小连接数")]),n._v("：当有新的请求出现时，遍历服务器节点列表并选取其中活动连接数最小的一台服务器来响应当前请求。活动连接数可以理解为当前正在处理的请求数。")])]),n._v(" "),i("h1",{attrs:{id:"nginx-常用命令有哪些"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#nginx-常用命令有哪些"}},[n._v("#")]),n._v(" Nginx 常用命令有哪些")]),n._v(" "),i("ul",[i("li",[n._v("启动 nginx 。")]),n._v(" "),i("li",[n._v("停止 nginx -s stop 或 nginx -s quit 。")]),n._v(" "),i("li",[n._v("重载配置 ./sbin/nginx -s reload(平滑重启) 或 service nginx reload 。")]),n._v(" "),i("li",[n._v("重载指定配置文件 .nginx -c /usr/local/nginx/conf/nginx.conf 。")]),n._v(" "),i("li",[n._v("查看 nginx 版本 nginx -v 。")]),n._v(" "),i("li",[n._v("检查配置文件是否正确 nginx -t 。")]),n._v(" "),i("li",[n._v("显示帮助信息 nginx -h 。")])]),n._v(" "),i("h1",{attrs:{id:"nginx性能优化的常见方式"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#nginx性能优化的常见方式"}},[n._v("#")]),n._v(" Nginx性能优化的常见方式")]),n._v(" "),i("ul",[i("li",[i("strong",[n._v("设置 Nginx 运行工作进程个数")]),n._v(" ：一般设置 CPU 的核心数或者核心数 x2；")]),n._v(" "),i("li",[i("strong",[n._v("开启 Gzip 压缩")]),n._v(" ：这样可以使网站的图片、CSS、JS 等文件在传输时进行压缩，提高访问速度, 优化 Nginx 性能。详细介绍可以参考"),i("a",{attrs:{href:"https://www.cnblogs.com/kevingrace/p/10018914.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Nginx 性能优化功能- Gzip 压缩(大幅度提高页面加载速度)"),i("OutboundLink")],1),n._v("这篇文章；")]),n._v(" "),i("li",[i("strong",[n._v("设置单个 worker 进程允许客户端最大连接数")]),n._v(" ：一般设置为 65535 就足够了；")]),n._v(" "),i("li",[i("strong",[n._v("连接超时时间设置")]),n._v(" ：避免在建立无用连接上消耗太多资源；")]),n._v(" "),i("li",[i("strong",[n._v("设置缓存")]),n._v(" ：像图片、CSS、JS 等这类一般不会经常修改的文件，我们完全可以设置图片在浏览器本地缓存，提高访问速度，优化 Nginx 性能。")])])])}),[],!1,null,null,null);i.default=t.exports}}]);